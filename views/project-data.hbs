<div class="container">
  {{#if isOwned}}
  {{#if isEdited}}
  <div class="row">
    <form action="/update-project/{{project._id}}" method="POST">
      <div class="form-group row">
        <div class="col-sm-3 mb-2">
          <textarea maxlength="100" class="form-control" name="projectName" id="projectName" cols="15" rows="1">{{project.projectName}}</textarea>
        </div>
        <div class="col-sm-5 mb-2">
          <textarea maxlength="500" class="form-control" name="description" id="description" cols="30" rows="1">{{project.description}}</textarea>
        </div>
        <div class="col-sm-4 mb-2">
          <button class="btn btn-outline-primary">UPDATE</button>
          <a href="/project/{{project._id}}" class="btn btn-outline-danger">CANCEL</a></h5>
        </div>
      </div>
    </form>
  </div>
  {{else}}
  <div class="row">
    <div class="col-sm-3 mt-3">
      <h3 class="mb-0">{{project.projectName}}</h3>
    </div>
    <div class="col-sm-7 mt-3">{{project.description}} </div>
    <div class="col-sm-2 mt-3">
      <form action="/edit-project/{{project._id}}" method="POST">
        <button class="btn btn-outline-primary">EDIT</button>
      </form>
    </div>
  </div>

  {{/if}}
  <div class="row">
    <div id="map-all"></div>
  </div>

  <div class="row">
    <div class="col">
      <h5>Total count: {{dataPoints.length}}</h5> 
    </div>

  <form action="/delete-project/{{project._id}}" method="post">
    <div class="col-sm-2 mb-2">
      <button style="white-space: nowrap;" class="btn btn-outline-danger">DELETE PROJECT</button>
    </div>
  </form>

  </div>
<hr>
  <div class="row">
    <div class="col">
      <h5>All Datapoints</h5> 
    </div>
  </div>
  {{#each dataPoints}}
  <div class="row">
    <div class="col-sm-6 mt-3">
      <h6><strong>{{this._user.firstName}} {{this._user.lastName}}</strong></h6>
      <p>{{this.created_at}}</p>
        <button class="btn btn-outline-danger">Delete</button>
        <button class="btn btn-outline-primary">Contact</button>
    </div>
    <div class="col mt-3">
      <strong>Comments</strong>
      <p>{{this.comment}}</p>
    </div>
  </div>
  {{/each}}

  {{else}}
  <div class="row">
    <div class="col-sm-3 mt-3">
      <h3 class="mb-0">{{project.projectName}}</h3>
    </div>
    <div class="col-sm-7 mt-3">{{project.description}} </div>
    <div class="col-sm-2 mt-3">
      <form action="/delete-project/{{project._id}}" method="POST">
        <button class="btn btn-outline-danger">DELETE</button>
      </form>
    </div>
  </div>
  <div class="row">
    <div id="map-all"></div>
  </div>

  <div class="row">
    <div class="col">
      <h5>Total count: {{dataPoints.length}}</h5> 
    </div>
  </div>
<hr>
  <div class="row">
    <div class="col">
      <h5>All Datapoints</h5> 
    </div>
  </div>
  {{#each dataPoints}}
  <div class="row">
    <div class="col-sm-6 mt-3">
      <h6><strong>{{this._user.firstName}} {{this._user.lastName}}</strong></h6>
      <p>{{this.created_at}}</p>
        <button class="btn btn-outline-danger">Delete</button>
        <button class="btn btn-outline-primary">Contact</button>
    </div>
    <div class="col mt-3">
      <strong>Comments</strong>
      <p>{{this.comment}}</p>
    </div>
  </div>
  {{/each}}
{{/if}}
</div>

<!--  Axios CDN  -->
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<!--  Google Maps Key  -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCZDe4B_Awc9Wy8Mzh5DGzeMW98KOD3Vns"></script>
<!--  Connect map-all.js  -->
{{!-- <script type="text/javascript" src="/javascripts/map-all.js"></script> --}}
<script>
  function startMap() {
    if (navigator.geolocation) {
      // Get current position
      navigator.geolocation.getCurrentPosition(function (position) {
        center = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        //show the map centered to the current position
        let lastWindow = null;
        var map = new google.maps.Map(
          document.getElementById('map-all'),
          {
            zoom: 10,
            center: center
          }
        );
        //get the datapoints
        const markers = [];
        const infoWindows = [];
        
        axios.get("/api/data-points/{{project._id}}")
          .then(response => {
            let dataPoints = response.data;
            dataPoints.forEach(function (datapoint) {
              //get the position of each datapoint
              const center = {
                lat: datapoint.location.coordinates[0],
                lng: datapoint.location.coordinates[1]
              };
              //create a marker for each datapoint
              let iconUrl = "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
              const pin = new google.maps.Marker({
                position: center,
                map: map,
                icon: {
                  url: iconUrl
                }
              });
              markers.push(pin);
              const infowindow = new google.maps.InfoWindow({
                content: `Collected by: <br> 
                            ${datapoint._user.firstName} ${datapoint._user.lastName} <br>
                            <a href="" class="btn"><i class="fas fa-trash"></i></a>
                            <a href="" class="btn"><i class="fas fa-envelope"></i></>`
              });
              infoWindows.push(infowindow);
            })
          })
          .then(()=>{
            infoWindows.forEach(function(infowindow, index){
              markers[index].addListener('click', function() {
                if (lastWindow) lastWindow.close();
                infowindow.open(map, markers[index]);
                lastWindow = infowindow;
              })
            })
          })
          .catch(error => {
            console.log(error);
          })
      }, function () {
        // If something goes wrong
        console.log('Error in the geolocation service.');
      })
    } else {
      // Browser says: Nah! I do not support this.
      console.log('Browser does not support geolocation.');
    }
  }
  startMap();
</script>